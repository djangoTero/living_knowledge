name: AI News Pipeline

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ai-news-pipeline
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      # Non-sensitive defaults (repo Variables ile override edilebilir)
      LOOKBACK_HOURS: ${{ vars.LOOKBACK_HOURS || '12' }}
      MAX_ITEMS: ${{ vars.MAX_ITEMS || '20' }}
      KEYWORDS: ${{ vars.KEYWORDS || '"generative AI" OR "large language model" OR LLM OR "diffusion model" OR "AI safety" OR "machine learning model"' }}
      DOMAIN_WEIGHTS_PATH: ${{ vars.DOMAIN_WEIGHTS_PATH || 'domain_weights.yml' }}
      STATE_PATH: ${{ vars.STATE_PATH || 'state/items.jsonl' }}
      OVERVIEW_STATE_PATH: ${{ vars.OVERVIEW_STATE_PATH || 'state/overviews.json' }}
      LLM_MODEL: ${{ vars.LLM_MODEL || 'gpt-4.1-mini' }}
      DEFAULT_BRANCH: ${{ secrets.DEFAULT_BRANCH || vars.DEFAULT_BRANCH || 'main' }}
      # Secrets
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CH_DAILY: ${{ secrets.SLACK_CH_DAILY }}
      SLACK_CH_WEEKLY: ${{ secrets.SLACK_CH_WEEKLY }}
      SLACK_CH_MONTHLY: ${{ secrets.SLACK_CH_MONTHLY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPOSITORY: ${{ github.repository }}
    outputs:
      changed: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Fetch daily items
        env:
          PREVIEW_JSON: preview.json
        run: python scripts/fetch_and_post_daily.py

      - name: Promote and expire
        run: python scripts/promote_and_expire.py

      - name: Check changes
        id: check
        run: |
          git status --short
          if git status --short news state | grep .; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit changes
        if: ${{ steps.check.outputs.changed == 'true' }}
        run: |
          git config user.name 'codex-bot'
          git config user.email 'codex@example.com'
          git add -A
          git commit -m 'chore: sync ai news state' || echo 'No changes to commit'

      - name: Push changes
        if: ${{ steps.check.outputs.changed == 'true' }}
        run: git push

      - name: Upload preview artifact
        if: ${{ steps.check.outputs.changed == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: preview
          path: preview.json

  validate-schema:
    needs: run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install pyyaml
      - name: Validate news schema
        run: python scripts/validate_news_schema.py

  codex-review:
    needs: validate-schema
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Run Codex for AI News validation/summarization
        uses: openai/codex-action@v1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt-file: codex/ai-news.prompt.md
          # model: o3-mini
          # codex-args: '["--max-iterations","1"]'
